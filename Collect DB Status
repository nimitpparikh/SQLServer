--Schdule this to run as SQL Agent job daily or weekly as per need
--Below view can provide easy validation if any database count status changed from previous day. 
USE tempdb
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_DBStatus]') AND type in (N'P'))
BEGIN
DROP PROCEDURE usp_DBStatus
END
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblDBStatus]') AND type in (N'U'))
BEGIN
DROP TABLE tblDBStatus
END
GO
CREATE PROCEDURE usp_DBStatus
AS
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblDBStatus]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[tblDBStatus](
	[ServerName] sysname NOT NULL,
	[name] [sysname] NOT NULL,
	[state_desc] [nvarchar](128) NULL,
	[RunTimeUTC] [datetime] NOT NULL
) ON [PRIMARY]
END
INSERT INTO tblDBStatus
SELECT 
	@@SERVERNAME,
    name, 
    CASE 
        WHEN state_desc = 'ONLINE' AND user_access_desc = 'SINGLE_USER' THEN state_desc + ', SingleUser'
        WHEN state_desc = 'ONLINE' AND user_access_desc = 'RESTRICTED_USER' THEN state_desc + ', RestrictedUser'
        WHEN state_desc = 'ONLINE' AND is_read_only = 1 THEN state_desc + ', ReadOnly'
        WHEN state_desc = 'ONLINE' AND is_read_only = 0 THEN state_desc
        ELSE state_desc
    END 
    + CASE 
        WHEN is_trustworthy_on = 1 THEN ', Trustworthy'
    END COLLATE SQL_Latin1_General_CP1_CI_AS AS CurrentStatus,
    GETUTCDATE() AS CurrentRunTimeUTC
FROM 
    sys.databases
UNION
SELECT 
	@@SERVERNAME,
    'aaa-' + CAST(state_desc AS NVARCHAR(128)) COLLATE SQL_Latin1_General_CP1_CI_AS, 
    CAST(COUNT(*) AS NVARCHAR(128)), 
    GETUTCDATE() AS RunTimeUTC
FROM 
    sys.databases
GROUP BY 
    state_desc;
WITH RankedRuns AS (
    SELECT *,
           ROW_NUMBER() OVER (partition by name ORDER BY RunTimeUTC DESC) AS RowNum
    FROM tblDBStatus
)
DELETE FROM tblDBStatus
WHERE RunTimeUTC < (SELECT max(RunTimeUTC) FROM RankedRuns WHERE  name = 'tempdb' and RowNum = 4);
GO
EXEC usp_DBStatus
GO
CREATE OR ALTER VIEW vwDBStatus
AS
WITH LastTwoEntries AS (
    SELECT 
        name,
        state_desc,
        RunTimeUTC,
        ROW_NUMBER() OVER (PARTITION BY name ORDER BY RunTimeUTC DESC) AS rn
    FROM 
        [dbo].[tblDBStatus]
)
, CurrentRun AS (
SELECT 
    name, 
    CASE 
        WHEN state_desc = 'ONLINE' AND user_access_desc = 'SINGLE_USER' THEN state_desc + ', SingleUser'
        WHEN state_desc = 'ONLINE' AND user_access_desc = 'RESTRICTED_USER' THEN state_desc + ', RestrictedUser'
        WHEN state_desc = 'ONLINE' AND is_read_only = 1 THEN state_desc + ', ReadOnly'
        WHEN state_desc = 'ONLINE' AND is_read_only = 0 THEN state_desc
        ELSE state_desc
    END 
    + CASE 
        WHEN is_trustworthy_on = 1 THEN ', Trustworthy'
    END COLLATE SQL_Latin1_General_CP1_CI_AS AS CurrentStatus,
    GETUTCDATE() AS CurrentRunTimeUTC
FROM 
    sys.databases
UNION
SELECT 
    'aaa-' + CAST(state_desc AS NVARCHAR(128)) COLLATE SQL_Latin1_General_CP1_CI_AS, 
    CAST(COUNT(*) AS NVARCHAR(128)), 
    GETUTCDATE() AS RunTimeUTC
FROM 
    sys.databases
GROUP BY 
    state_desc
)
, PreviousRun AS (
    SELECT 
        name,
        state_desc AS PreviousStatus,
        RunTimeUTC AS PreviousRunTimeUTC
    FROM 
        LastTwoEntries
    WHERE RunTimeUTC = (SELECT RunTimeUTC FROM LastTwoEntries WHERE name = 'tempdb' AND rn = 1 )
)
, CombinedRuns AS (
    SELECT 
        COALESCE(c.name, p.name) AS name,
        c.CurrentStatus,
        p.PreviousStatus,
        c.CurrentRunTimeUTC,
        p.PreviousRunTimeUTC
    FROM 
        CurrentRun c
    FULL OUTER JOIN 
        PreviousRun p
    ON 
        c.name = p.name
)
SELECT 
    name,
    ISNULL(CurrentStatus, 'Dropped') AS CurrentStatus,
    ISNULL(PreviousStatus, 'New') AS PreviousStatus,
    ISNULL(CONVERT(VARCHAR(19),CurrentRunTimeUTC, 121), 'Dropped') AS CurrentRunTimeUTC,
    ISNULL(CONVERT(VARCHAR(19), PreviousRunTimeUTC,121), 'New') AS PreviousRunTimeUTC,
    CASE 
        WHEN CurrentStatus IS NULL THEN 'Dropped'
        WHEN PreviousStatus IS NULL THEN 'New'
        WHEN CurrentStatus <> PreviousStatus THEN 'Status Changed'
        ELSE 'No Change'
    END AS StatusChange
FROM 
    CombinedRuns
GO

select * from vwDBStatus

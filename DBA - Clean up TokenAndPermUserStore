CREATE OR ALTER PROCEDURE usp_TokenAndPermUserStore
(@CacheCleanupMB int = 4096, @retention int = 14)
AS
SET NOCOUNT ON;
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblTokenAndPermUserStore]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[tblTokenAndPermUserStore](
	[TokenAndPermUserStoreSize] [decimal](10, 2) NULL,
	[DateCollected] [datetime] NULL
) ON [PRIMARY]
DECLARE @CacheSizeMB FLOAT;
-- Set the variable with the size of the cache
SELECT @CacheSizeMB = pages_kb / 1024.0
FROM sys.dm_os_memory_clerks 
WHERE name LIKE 'TokenAndPermUserStore'
AND type = 'USERSTORE_TOKENPERM';

IF @CacheSizeMB > @CacheCleanupMB
BEGIN
	INSERT INTO tblTokenAndPermUserStore
	SELECT @CacheSizeMB,GETDATE()
    DBCC FREESYSTEMCACHE ('TokenAndPermUserStore');
    --PRINT 'Cache cleared';
END
ELSE
BEGIN
    INSERT INTO tblTokenAndPermUserStore
	SELECT @CacheSizeMB,GETDATE()
END;
DELETE FROM tblTokenAndPermUserStore
WHERE DateCollected < DATEADD(DD,-@retention,GETDATE())
GO


--Schedule to run it via agent job.

USE [msdb]
GO
IF  EXISTS (SELECT job_id FROM msdb.dbo.sysjobs_view WHERE name = N'DBA - Cleanup TokenAndPermUserStore')
EXEC msdb.dbo.sp_delete_job @job_name=N'DBA - Cleanup TokenAndPermUserStore', @delete_unused_schedule=1
GO
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Maintenance' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Maintenance'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'DBA - Cleanup TokenAndPermUserStore', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=0, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@category_name=N'Database Maintenance', 
		@owner_login_name=N'sa', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Clean up TokenAndPermUserStore', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'EXEC usp_TokenAndPermUserStore', 
		@database_name=N'DBASupport', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Hourly', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=8, 
		@freq_subday_interval=1, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20240909, 
		@active_end_date=99991231, 
		@active_start_time=0, 
		@active_end_time=235959 
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:
GO

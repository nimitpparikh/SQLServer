CREATE OR ALTER PROCEDURE usp_GrantAccess
    @UserName NVARCHAR(100),
    @GrantRead BIT = 1,
    @GrantWrite BIT = 0,
    @DBName NVARCHAR(100) = NULL,
    @PrintOnly BIT = 1,
    @ISSqlLogin BIT = 0, -- Treat as Windows login if 0, SQL login if 1
    @Password NVARCHAR(100) = NULL -- Mandatory if @ISSqlLogin is 1
AS
BEGIN
    DECLARE @SQL NVARCHAR(MAX)

    -- Validate password complexity if @ISSqlLogin is 1
    IF @ISSqlLogin = 1 AND (@Password IS NULL OR LEN(@Password) < 16 OR @Password NOT LIKE '%[A-Z]%' OR @Password NOT LIKE '%[a-z]%' OR @Password NOT LIKE '%[0-9]%' OR @Password NOT LIKE '%[^a-zA-Z0-9]')
    BEGIN
        RAISERROR('Password must be at least 16 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.', 16, 1)
        RETURN
    END

   
        -- Handle on-premises SQL Server scenario
        -- Check if login exists, if not create it
        IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = @UserName)
        BEGIN
            IF @ISSqlLogin = 1
            BEGIN
                SET @SQL = 'CREATE LOGIN [' + @UserName + '] WITH PASSWORD = ''' + @Password + ''';'
            END
            ELSE
            BEGIN
                SET @SQL = 'CREATE LOGIN [' + @UserName + '] FROM WINDOWS;'
            END
            IF @PrintOnly = 1
            BEGIN
                PRINT @SQL
            END
            ELSE
            BEGIN
                EXEC sp_executesql @SQL
            END
        END

        -- Grant access to specific database if @DBName is provided
        IF @DBName IS NOT NULL
        BEGIN
            SET @SQL = 'USE [' + @DBName + '];'
            SET @SQL = @SQL + ' IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = ''' + @UserName + ''')
                            BEGIN
                                CREATE USER [' + @UserName + '] FOR LOGIN [' + @UserName + '];
                            END;'
            IF @GrantRead = 1
            BEGIN
                SET @SQL = @SQL + ' ALTER ROLE db_datareader ADD MEMBER [' + @UserName + '];'
            END
            IF @GrantWrite = 1
            BEGIN
                SET @SQL = @SQL + ' ALTER ROLE db_datawriter ADD MEMBER [' + @UserName + '];'
            END
            IF @PrintOnly = 1
            BEGIN
                PRINT @SQL
            END
            ELSE
            BEGIN
                EXEC sp_executesql @SQL
            END
        END
        ELSE
        BEGIN
            -- Grant access to all user databases
            DECLARE @DBNameCursor2 NVARCHAR(100)
            DECLARE db_cursor2 CURSOR FOR
            SELECT name
            FROM sys.databases
            WHERE database_id > 4 -- Skip system databases

            OPEN db_cursor2
            FETCH NEXT FROM db_cursor2 INTO @DBNameCursor2

            WHILE @@FETCH_STATUS = 0
            BEGIN
                SET @SQL = 'USE [' + @DBNameCursor2 + '];'
                SET @SQL = @SQL + ' IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = ''' + @UserName + ''')
                                BEGIN
                                    CREATE USER [' + @UserName + '] FOR LOGIN [' + @UserName + '];
                                END;'
                IF @GrantRead = 1
                BEGIN
                    SET @SQL = @SQL + ' ALTER ROLE db_datareader ADD MEMBER [' + @UserName + '];'
                END
                IF @GrantWrite = 1
                BEGIN
                    SET @SQL = @SQL + ' ALTER ROLE db_datawriter ADD MEMBER [' + @UserName + '];'
                END
                IF @PrintOnly = 1
                BEGIN
                    PRINT @SQL
                END
                ELSE
                BEGIN
                    EXEC sp_executesql @SQL
                END
                FETCH NEXT FROM db_cursor2 INTO @DBNameCursor2
            END

            CLOSE db_cursor2
            DEALLOCATE db_cursor2
        END
END

go
usp_grantaccess

--http://dba.stackexchange.com/questions/64567/how-to-clone-a-user-in-sql-server-2008-r2
--- To copy permissions of one user/role to another user/role.
  declare  @sql nvarchar(max);

declare @dbname sysname, @temp nvarchar(max)
DECLARE Permission CURSOR FOR
  SELECT
    name
  FROM sys.databases
  OPEN Permission;
  FETCH NEXT FROM Permission INTO @dbname;
  WHILE @@FETCH_STATUS = 0
  BEGIN
set @sql = '
DECLARE @OldUser SYSNAME, @NewUser SYSNAME
SET @OldUser = ''olduser''; 
SET @NewUser = ''userNEW'';  
SELECT ''USE''+SPACE(1)+''' + @dbname + ''' AS ''--Database Context''
SELECT ''--Cloning permissions from''+SPACE(1)+QUOTENAME(@OldUser)+SPACE(1)+''to''+SPACE(1)+QUOTENAME(@NewUser) AS ''--Comment'';
SELECT ''EXEC sp_addrolemember @rolename =''+SPACE(1)+QUOTENAME(USER_NAME(rm.role_principal_id), '''''''')+'', @membername =''+SPACE(1)+QUOTENAME(@NewUser, '''''''') AS ''--Role Memberships''
FROM ' + @dbname + '.sys.database_role_members AS rm
WHERE USER_NAME(rm.member_principal_id) = @OldUser
ORDER BY rm.role_principal_id ASC;
SELECT CASE
           WHEN perm.state <> ''W''
           THEN perm.state_desc
           ELSE ''GRANT''
       END+SPACE(1)+perm.permission_name+SPACE(1)+''ON ''+QUOTENAME(USER_NAME(obj.schema_id))+''.''+QUOTENAME(obj.name)+CASE
                                                                                                                        WHEN cl.column_id IS NULL
                                                                                                                        THEN SPACE(0)
                                                                                                                        ELSE ''(''+QUOTENAME(cl.name)+'')''
                                                                                                                    END+SPACE(1)+''TO''+SPACE(1)+QUOTENAME(@NewUser) COLLATE database_default+CASE
                                                                                                                                                                                                WHEN perm.state <> ''W''
                                                                                                                                                                                                THEN SPACE(0)
                                                                                                                                                                                                ELSE SPACE(1)+''WITH GRANT OPTION''
                                                                                                                                                                                            END AS ''--Object Level Permissions''
FROM ' + @dbname + '.sys.database_permissions AS perm
     INNER JOIN ' + @dbname + '.sys.objects AS obj ON perm.major_id = obj.[object_id]
     INNER JOIN  ' + @dbname + '.sys.database_principals AS usr ON perm.grantee_principal_id = usr.principal_id
     LEFT JOIN  ' + @dbname + '.sys.columns AS cl ON cl.column_id = perm.minor_id
                                    AND cl.[object_id] = perm.major_id
WHERE usr.name = @OldUser
ORDER BY perm.permission_name ASC,
         perm.state_desc ASC;
SELECT CASE
           WHEN perm.state <> ''W''
           THEN perm.state_desc
           ELSE ''GRANT''
       END+SPACE(1)+perm.permission_name+SPACE(1)+SPACE(1)+''TO''+SPACE(1)+QUOTENAME(@NewUser) COLLATE database_default+CASE
                                                                                                                          WHEN perm.state <> ''W''
                                                                                                                          THEN SPACE(0)
                                                                                                                          ELSE SPACE(1)+''WITH GRANT OPTION''
                                                                                                                      END AS ''--Database Level Permissions''
FROM  ' + @dbname + '.sys.database_permissions AS perm
     INNER JOIN  ' + @dbname + '.sys.database_principals AS usr ON perm.grantee_principal_id = usr.principal_id
WHERE usr.name = @OldUser
      AND perm.major_id = 0
ORDER BY perm.permission_name ASC,
         perm.state_desc ASC;
'
   exec sp_executesql @sql
    FETCH NEXT FROM Permission INTO @dbname;

  END
    CLOSE Permission;
  DEALLOCATE Permission;
